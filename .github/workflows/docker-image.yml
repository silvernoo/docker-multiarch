name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4


    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3

    # (可选) 步骤 3: 检查 Buildx 构建器平台
    # 这个步骤可以验证 Buildx 是否已正确设置，你会看到 arm64 出现在列表中。
    - name: Inspect builder
      run: |
        echo "Builder instance details:"
        docker buildx inspect ${{ steps.buildx.outputs.name }}

    - name: Log in to Docker Hub
      uses: docker/login-action@v3 # 使用一个较新版本
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set outputs
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Build the Docker image
      env: 
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      run: |
        docker buildx build \
          --platform linux/amd64,linux/386,linux/arm64,linux/arm/v7 \
          --tag $DOCKER_USERNAME/cowyo:latest \
          --tag $DOCKER_USERNAME/cowyo:${{ steps.vars.outputs.sha_short }} \
          --push \
          -f cowyo/Dockerfile cowyo/
        
        docker buildx build \
          --platform linux/amd64,linux/arm64 \
          --tag $DOCKER_USERNAME/gemini-cli:latest \
          --tag $DOCKER_USERNAME/gemini-cli:${{ steps.vars.outputs.sha_short }} \
          --push \
          -f gemini-cli/Dockerfile gemini-cli/
